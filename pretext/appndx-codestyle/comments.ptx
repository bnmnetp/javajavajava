<section xml:id="comments">
  <title>Comments</title>
  <introduction>
    <p>
      Java recognizes two types of comments:
      <em>C-style</em> comments use the same syntax found in C and C++. They are delimited by
      <c>/* ... */</c> and <c>//</c>. 
    </p>
    <p>
      The first set of delimiters is used to delimit a multiline comment.
      The Java compiler will ignore all text that occurs between <c>/*</c> and <c>*/</c>. 
    </p>
    <p>  
      The second set of delimiters is used for a single-line comment.
      Java will ignore all the code on the rest of the line following a double slash (<c>//</c>).
      C-style comments are called <em>implementation comments</em>
      and are mainly used to describe the implementation of your code.
    </p>
    <p>
      <em>Documentation</em> comments are particular to Java.
      They are delimited by <c>/** ... */</c>. These are used mainly to describe the 
      specification or design of the code rather than its implementation.
      When a file containing documentation comments is processed by the <em>javadoc</em>
      tool that comes with the Java Development Kit (JDK), the documentation comments 
      will be incorporated into an HTML document.
      This is how online documentation has been created for the Java library classes.
    </p>
  </introduction>
  <subsection>
    <title>Implementation Commenting Guidelines</title>
    <p>
      Implementation (C-style) comments should be used to provide an overview of the code 
      and to provide information that is not easily discernible from the code itself.
      They should not be used as a substitute for poorly written or poorly designed code.
    </p>
    <p>
      In general, comments should be used to improve the readability of the code.
      Of course, readability depends on the intended audience.
      Code that's easily readable by an expert programmer may be completely indecipherable to a novice.
      Our commenting guidelines are aimed at someone who is just learning to program in Java.
    </p>
  </subsection>
  <subsection>
    <title>Block Comments</title>
    <p>
      A <em>block comment</em> or <em>comment block</em>
      is a multiline comment that is used to describe files, methods,
      data structures, and algorithms:
    </p>
 <program language="java"><input>
 /*
  * Multiline comment block
  */
 </input></program>
  </subsection>
  <subsection>
    <title>Single-Line Comments</title>
    <p>
      A single-line comment can be delimited either by <c>//</c> or by
      <c>/* ... */</c>. The <c>//</c> is also used to <em>comment out</em>
      a line of code that you want to skip during a particular run.
      The following example illustrates these uses:
    </p>
 <program language="java"><input>
/* Single line comment */
System.out.println("Hello");    // End of line comment
// System.out.println("Goodbye");
 </input></program>
    <p>
      Note that the third line is commented out and would be ignored by the Java compiler.
    </p>
    <p>
      In this text,
      we generally use slashes for single-line and end-of-line comments.
      And we frequently use end-of-line comments to serve as a running commentary on the code itself.
      These types of comments serve a pedagogical purpose<mdash/>to teach you how the code works.
      In a
      <q>production environment</q>
      it would be unusual to find this kind of running commentary.
    </p>
  </subsection>
  <subsection>
    <title>Java Documentation Comments</title>
    <p>
      Java's online documentation has been generated by the <c>javadoc</c> tool that comes with the Java Development Kit (JDK).
      To conserve space,
      we use documentation comments only sparingly in the programs listed in this textbook itself.
      However, <c>javadoc</c> comments are used more extensively to document the online source code that accompanies the textbook.
    </p>
    <p>
      Documentation comments are placed before classes, interfaces,
      constructors, methods, and fields.
      They generally take the following form:
    </p>
 <program language="java"><input>
 /**
  * The Example class blah blah
  * @author J. Programmer
  */
 public class Example { ...
 </input></program>
    <p>
      Note how the class definition is aligned with the beginning of the comment. 
      <c>Javadoc</c> comments use special tags,
      such as <em>author</em> and <em>param</em>,
      to identify certain elements of the documentation.
      For more details, see the 
      <url href="https://docs.oracle.com/javase/8/docs/technotes/tools/windows/javadoc.html" visual="">javadoc documentation</url>.
    </p>
  </subsection>
</section>