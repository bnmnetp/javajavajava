<section xml:id="ch-sockets-sum">
<title>Chapter Summary</title>
<subsection>
<title>Technical Terms</title>
<table>
  <tabular>
<row>
<cell>
    busy waiting
      </cell>
      <cell>
        callback method
      </cell>
      <cell>
        client
      </cell>
    </row><row>
      <cell>
        client/server protocols
      </cell>

        <cell>
        domain name
      </cell>
      <cell>
        ethernet protocol
      </cell>
    </row><row>
      <cell>
        File Transfer Protocol (FTP)
      </cell>
      <cell>
        get
      </cell>

      <cell>
        HyperText Transfer Protocol (HTTP)
      </cell>
    </row><row>
      <cell>
        internet
      </cell>
      <cell>
        Internet
      </cell>
      <cell>
        Internetworking Protocol (IP)
      </cell>
    </row><row>
      <cell>
        Java Server Page (JSP)
      </cell>
      <cell>
        packet
      </cell>
      <cell>
        port
      </cell>
    </row><row>
      <cell>
        post
      </cell>

      <cell>
        protocol
      </cell>
      <cell>
        router
      </cell>
    </row><row>
      <cell>
        sandbox security model
      </cell>
      <cell>
        scriptlet
      </cell>
 
      <cell>
        server
      </cell>
    </row><row>
      <cell>
        servlet
      </cell>
      <cell>
        Simple Mail Transfer Protocol (SMTP)
      </cell>
      <cell>
        socket
      </cell>
    </row><row>
      <cell>
        trusted code
      </cell>
      <cell>
        Uniform Resource Locator (URL)
      </cell>
      <cell>
        World Wide Web (WWW)
      </cell>
    </row>
    </tabular></table>
</subsection>
<subsection>
<title>Summary of Important Points</title>      
        <ul>
          <li>
            <p>
              An <em>internet</em> is a collection of two or more distinct networks joined by <em>routers</em>,
              which have the task of translating one network's language to the other's.
              The <em>Internet</em> is a network of networks that uses the
              <em>Internet Protocol (IP)</em>
              as the translation medium.
            </p>
          </li>
          <li>
            <p>
              A <em>protocol</em> is a set of rules that controls the transfer of information between two computers in a network.
              The <em>HyperText Transfer Protocol (HTTP)</em>
              governs information exchange on the World Wide Web (WWW).
              The <em>Simple Mail Transfer Protocol</em>
              controls mail service on the Internet.
              The <em>File Transfer Protocol (FTP)</em>
              controls the transfer of files between Internet computers.
              The <em>Domain Name System (DNS)</em>
              governs the use of names on the Internet.
            </p>
          </li>
          <li>
            <p>
              A <em>client/server</em> application is one that divides its task between a client,
              which requests service, and a server, which provides service.
              Many Internet applications and protocols are based on the client/server model.
            </p>
          </li>
          <li>
            <p>
              Lower-level protocols, such as the
              <em>ethernet protocol</em>
              and <em>token ring protocol</em>,
              govern the transmission of data between computers on a single network.
              The <em>Internet Protocol (IP)</em>
              translates between such protocols.
            </p>
          </li>
          <li>
            <p>
              A <em>Uniform Resource Locator (URL)</em>
              is a standard way of specifying addresses on the Internet.
              It consists of several parts separated by slashes and colons: <c>method://host:port/path/file</c>. The <c>java.net.URL</c> class is used to represent URLs.
            </p>
          </li>
          <li>
            <p>
              Files of text or data (images,
              audio files) on the Internet or Web can be downloaded using the same <c>InputStream</c> s and
  <c>OutputStream</c> s as files located on a disk.
              To read or write a resource located on a network,
              you need to connect its URL to an input or output stream.
            </p>
          </li>
          <li>
            <p>
              The <c>java.awt.Toolkit</c> class contains useful methods for downloading <c>Image</c> s into an application.
            </p>
          </li>
          <li>
            <p>
              A <em>socket</em> is a two-way communication channel between two running programs on a network.
              The <c>java.net.Socket</c> class can be used to set up communication channels for client/server applications.
              The <em>server</em> process listens at a socket for requests from a client.
              The <em>client</em> process requests service from a server listening at a particular socket.
              Once a connection exists between client and server,
              input and output streams are used to read and write data over the socket.
            </p>
          </li>
        </ul>
</subsection>



<solutions scope="chapter-sockets" divisional="solution" project="solution" inline="solution">
  <title>Solutions to Self-Study Exercises</title>
</solutions>
     
</section>          