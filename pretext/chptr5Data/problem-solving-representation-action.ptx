<section xml:id="problem-solving-representation-action">
  <title>Problem Solving = Representation + Action</title>
  <p>
    As you have seen in this chapter,
    designing classes involves a careful interplay between representation (data) and action
    (methods).
    Our several modifications to the <c>OneRowNim</c> class illustrate that the data 
    used to represent an object's state can either complicate or 
    simplify the design of the methods needed to solve a problem.
  </p>
  <p>
    We hope that it is becoming clear that in writing object-oriented programs,
    choosing an appropriate data representation is just as important as choosing the correct algorithm.
    The concept of an object allows us to encapsulate representation and action into a single entity.
    It is a very natural way to approach problem solving.
  </p>
  <p>
    If you look closely enough at any problem,
    you will find this close relationship between representation and action.
    For example,
    compare the task of performing multiplication using Arabic numerals <mdash/>
    65 * 12 = 380 <mdash/> and the same task using Roman numerals <mdash/> LXV * XII = DCCLXXX.
    It's doubtful that our science and technology would be where they are 
    today if our civilization had to rely forever on the Roman way of representing numbers!
  </p>
  <principle>
  <title>EFFECTIVE DESIGN: Representation and Action</title>
  <p>
        Representation (data) and action (methods) are equally 
        important parts of the problem-solving process.
  </p>
  </principle>
</section>