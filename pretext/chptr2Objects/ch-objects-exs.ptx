<section xml:id="ch-objects-exs">
    <title>Exercises</title>
    <ol>
      <li>
        <p>
          Consider the transaction of asking your professor for your grade in your computer science course.
          Identify the objects in this transaction and the types of messages that would be passed among them.
        </p>
      </li>
      <li>
        <p>
          Now suppose the professor in the previous exercise decides to automate the transaction of looking up a student's grade and has asked you to design a program to perform this task.
          The program should let a student type in his or her name and ID number and the program then should display his or her grades for the semester,
          with a final average.
          Suppose there are five quiz grades, three exams,
          and two programming exercise grades.
          Identify the objects in this program and the type of messages that would be passed among them.
          (<em>Hint</em>: The grades themselves are just data values,
          not objects.)
        </p>
      </li>
      <li>
        <p>
          In the <c>RiddleUser</c> class (<xref ref="fig-riddleuser"></xref>),
          give two examples of object instantiation and explain what is being done.
        </p>
      </li>
      <li>
        <p>
          Explain the difference between a method definition and a method call.
          Give an example of each from the <c>Riddle</c> and <c>RiddleUser</c> examples discussed in this chapter.
        </p>
      </li>
      <li>
        <p>
          In the <c>RiddleUser</c> class (<xref ref="fig-riddleuser"></xref>),
          identify three examples of method calls and explain what is being done.
        </p>
      </li>
      <li>
        <p>
          Describe how the slogan
          <q>define, create, manipulate</q>
          applies to the <c>Riddle</c> example.
        </p>
      </li>
      <li>
        <p>
          An identifier is the name for a <c>__________</c> , <c>__________</c> , or a <c>__________</c> .
        </p>
      </li>
      <li>
        <p>
          Which of the following would be valid identifiers?
 <program language="java"><input>
int  74ElmStreet  Big_N     L$&amp;%#   boolean  Boolean  _number
Int  public       Private   Joe     j1       2*K      big numb
 </input></program>
        </p>
      </li>
      <li>
        <p>
          Explain the difference between a <c>class variable</c> and an <c>instance variable</c>.
        </p>
      </li>
      <li>
        <p>
          Identify the syntax error
          (if any)
          in each declaration.
          Remember that some parts of an instance variable declaration are optional.
        </p>
        <ol>
          public boolean isEven ; Private boolean isEven ; private boolean isOdd public boolean is Odd ; string S ; public String boolean ; private boolean even = 0; private String s = helloWorld ;
        </ol>
      </li>
      <li>
        <p>
          Write declarations for each of the following instance variables.
          <ol>
            <li>
              <p>
                A <c>private boolean</c> variable named <c>bool</c> that has an initial value of <c>true</c>.
              </p>
            </li>
            <li>
              <p>
                A <c>public String</c> variable named <c>str</c> that has an initial value of "hello".
              </p>
            </li>
            <li>
              <p>
                A <c>private int</c> variable named <c>nEmployees</c> that is not assigned an initial value.
              </p>
            </li>
          </ol>
        </p>
      </li>
      <li>
        <p>
          Identify the syntax error
          (if any)
          in each method header:
          <ol>
            public String boolean() private void String () private void myMethod private myMethod() public static void Main (String argv[])
          </ol>
        </p>
      </li>
      <li>
        <p>
          Identify the syntax error
          (if any)
          in each assignment statement.
          Assume that the following variables have been declared:
 <program language="java"><input>
public int m;
public boolean b;
public String s;
 </input></program>
          <ol>
            m = "86" ; m = 86 ; m = true ; s = 1295 ; s = "1295" ; b = "true" ; b = false
          </ol>
        </p>
      </li>
      <li>
        <p>
          Given the following definition of the <c>NumberAdder</c> class,
          add statements to its <c>main()</c> method to create two instances of this class,
          named <c>adder1</c> and <c>adder2</c>. Then add statements to set <c>adder1</c>'s numbers to 10 and 15,
          and <c>adder2</c>'s numbers to 100 and 200.
          Then add statements to print their respective sums.
 <program language="java"><input>
public class NumberAdder
{
    private int num1;
    private int num2;
    public void setNums(int n1, int n2)
    {
      num1 = n1;
      num2 = n2;
    }
    public int getSum()
    {
      return num1 + num2 ;
    }
    public static void main(String args[])
    {
    }}
 </input></program>
        </p>
      </li>
      <li>
        <p>
          For the <c>NumberAdder</c> class in the previous exercise,
          what are the names of its instance variables and instance methods?
          Identify three expressions that occur in the program and explain what they do.
          Identify two assignment statements and explain what they do.
        </p>
      </li>
      <li>
        <p>
          Explain the difference between each of the following pairs of concepts.
          <ol>
            <li>
              <p>
                A method definition and a method call.
              </p>
            </li>
            <li>
              <p>
                Declaring a variable of reference type and creating an instance.
              </p>
            </li>
            <li>
              <p>
                A variable of reference type and a variable of primitive type.
              </p>
            </li>
          </ol>
        </p>
      </li>
      <li>
        <p>
          Define a Java class named <c>NumberCruncher</c> that has a single <c>int</c> variable as its only instance variable.
          Then define methods that perform the following operations on its number:
          get, double, triple, square, and cube.
          Set the initial value of the number with a constructor as was done with the instance variables in the <c>Riddle</c> class.
        </p>
      </li>
      <li>
        <p>
          Write a <c>main()</c> method and add it to the
<c>NumberCruncher</c> class defined in the previous problem.
          Use it to create a <c>NumberCruncher</c> instance,
          with a certain initial value,
          and then get it to report its double, triple, square, and cube.
        </p>
      </li>
      <li>
        <p>
          Write a Java class definition for a <c>Cube</c> object,
          that has an integer attribute for the length of its side.
          The object should be capable of reporting its surface area and volume.
          The surface area of a cube is six times the area of any side.
          The volume is calculated by cubing the side.
        </p>
      </li>
      <li xml:id="uml-exercises">
        <p>
          Write a Java class definition for a <c>CubeUser</c> object that will use the <c>Cube</c> object defined in the previous exercise.
          This class should create three <c>Cube</c> instances,
          each with a different side,
          and then report their respective surface areas and volumes.
          Challenge: Modify your solution to the previous exercise so that it lets the user input the side of the cube.
          Follow the example shown in this chapter's
          <q>From the Java Library</q>
          section.
          Challenge: Define a Java class that represents an address book entry, <c>Entry</c>, which consists of a name,
          address, and phone number,
          all represented as <c>String</c> s.
          For the class's interface,
          define methods to set and get the values of each of its instance variables.
          Thus, for the <c>name</c> variable,
          it should have a <c>setName()</c> and a <c>getName()</c> method. \secEXRHone{UML Exercises}
        </p>
      </li>
      <li>
        <p>
          Draw a UML class diagram to represent the following class hierarchy: There are two types of languages,
          natural languages and programming languages.
          The natural languages include Chinese, English, French,
          and German.
          The programming languages include Java, Smalltalk and C++, which are object-oriented languages, FORTRAN, COBOL, Pascal,
          and C, which are imperative languages, Lisp and ML, which are functional languages,
          and Prolog, which is a logic language.
        </p>
      </li>
      <li>
        <p>
          Draw a UML class diagram to represent different kinds of automobiles,
          including trucks, sedans,
          wagons, SUVs, and the names and manufacturers of some popular models in each category.
        </p>
      </li>
      <li>
        <p>
          Draw a UML object diagram of a triangle with attributes for three sides,
          containing the values 3, 4, and 5.
        </p>
      </li>
      <li>
        <p>
          Suppose you are writing a Java program to implement an electronic address book.
          Your design is to have two classes,
          one to represent the user interface and one to represent the address book.
          Draw a UML diagram to depict this relationship.
          See <xref ref="fig-p63f2">Figure</xref>.
        </p>
      </li>
      <li>
        <p>
          Draw an UML object diagram to depict the relationship between an applet,
          which serves as a user interface,
          and three <c>Triangle</c> s, named <c>t1</c>, <c>t2</c>, and <c>t3</c>.
        </p>
      </li>
    </ol>
</section> 