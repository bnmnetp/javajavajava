<section xml:id="introduction28">
  <title>Introduction</title>
  <p>
    We have been using input and output in our programs since the very first chapters of the book.
    In this chapter we will take a closer look at Java's input and output elements.
  </p>
  <p>
    <term>Input</term> refers to information or data read from some external source into a running program.
    We introduced you to working with input in Chapter<nbsp/>4,
    when we developed the <c>KeyboardReader</c> class with methods for reading data from the keyboard into the console window.
    We also discussed reading data from the keyboard into a <c>JTextField</c> in a GUI interface,
    as well as  reading data from a text file using methods in the <c>Scanner</c> class during that chapter.
  </p>
  <p>
    <term>Output</term> refers to information or data written from the running program to some external destination.
    Up to this point, whenever our programs have produced output,
    it has been sent to either the Java console, to a text area,
    or to some other GUI component.
    These destinations are transitory,
    in the sense that they reside in the computer's primary memory and exist only so long as the program is running.
  </p>
  <p>
    A <term>file</term> is a collection of data that's stored on a disk or on some other relatively permanent storage medium.
    A file's existence does not depend on a running program.
    In this chapter,
    we will learn how to create files and how to perform input and output operations on their data using the 
    Java classes designed specifically for this purpose.
    Methods from these classes allow us to write data to files and provide greater flexibility in the way we 
    read data from files than the <c>Scanner</c> class offers.
  </p>
</section>