    <section xml:id="ch-arrays-sum">
    <title>Chapter Summary</title>
    <subsection xml:id="ch-arrays-terms">
        <title>Technical Terms</title>
    <tabular>
    <row>
    <cell>
      array initializer
    </cell>
    <cell>
      array length
    </cell>
</row>
<row>
        <cell>
      binary search
    </cell>
    <cell>
      data structure
    </cell>
</row>
<row>
        <cell>
      element
    </cell>
    <cell>
      element type
    </cell>
</row>
<row>
        <cell>
      insertion sort
    </cell>
    <cell>
      multidimensional array
    </cell>
</row>
<row>
        <cell>
      one-dimensional array
    </cell>
    <cell>
      polymorphic sort method
    </cell>
</row>
<row>
        <cell>
      selection sort
    </cell>
    <cell>
      sequential search
    </cell>
</row>
<row>
        <cell>
      sorting
    </cell>
    <cell>
      subscript
    </cell>
</row>
<row>
        <cell>
      two-dimensional array
    </cell>
</row>
</tabular>
</subsection>
<subsection xml:id="ch-arrays-important">
    <title>Important Points</title>
      <ul>
        <li>
          <p>
            An <term>array</term>
              <idx><h>array</h></idx>
            is a named collection of contiguous storage locations,
            each of which stores a data item of the same data type.
            Each element of an array is referred to by a <em>subscript
              <idx><h>subscript</h></idx>
            </em><mdash/>that is, by its position in the array.
            If the array contains <em>N</em> elements,
            then its length is <em>N</em> and its indexes are <c>0, 1, <ellipsis /> N-1</c>.
          </p>
        </li>
        <li>
          <p>
            Array elements are referred to using the following subscript notation
            <em>arrayname[subscript]</em>,
            where <em>arrayname</em> is any valid identifier,
            and <em>subscript</em> is an integer value in the range 0 to <c>arrayname.length - 1</c>. The array's <c>length</c> instance variable can be used as a bound for loops that process the array.
          </p>
        </li>
        <li>
          <p>
            An <em>array declaration</em> provides the name and type of the array.
            An array instantiation uses the keyword <c>new</c> and causes the compiler to allocate memory for the array's elements:
 <program language="java"><input>
int arr[]; // Declare a one-dimensional array variable
arr = new int[15];// Allocate 15 int locations for it
 </input></program>
          </p>
        </li>
        <li>
          <p>
            Multidimensional arrays have arrays as their components:
 <program language="java"><input>
int twoDarr[][]; // Declare a two-dimensional array variable
twoDarr = new int[10][15]; // Allocate 150 int locations
 </input></program>
          </p>
        </li>
        <li>
          <p>
            An array's values must be initialized by assigning values to each array location.
            An <em>initializer
              <idx><h>array initializer</h></idx>
            </em> expression may be included as part of the array declaration.
          </p>
        </li>
        <li>
          <p>
            Insertion sort and selection sort are examples of array sorting algorithms.
            Both algorithms require several passes over the array.
          </p>
        </li>
        <li>
          <p>
            When an array is passed as a argument to a method,
            a reference to the array is passed rather than the entire array itself.
          </p>
        </li>
        <li>
          <p>
            Swapping two elements of an array,
            or any two locations in memory,
            requires the use of a temporary variable.
          </p>
        </li>
        <li>
          <p>
            Sequential search and binary search are examples of array searching algorithms.
            Binary search requires that the array be sorted.
          </p>
        </li>
        <li>
          <p>
            For multidimensional arrays,
            each dimension of the array has its own <c>length</c> variable.
          </p>
        </li>
        <li>
          <p>
            Inheritance and polymorphism are useful design features for developing a hierarchy of computer games.
          </p>
        </li>
      </ul>
</subsection>

<solutions scope="chapter-arrays" divisional="solution" project="solution" inline="solution">
  <title>Solutions to Self-Study Exercises</title>
</solutions>

</section>