<section xml:id="ch-sockets-exs">
    <title>Exercises</title>
    <p>
    <term>Note:</term> For programming exercises,
        first draw a UML class diagram describing all classes and their inheritance 
        relationships and/or associations.
    </p>
    <ol>
      <li>
        <p>
          Explain the difference between each of the following pairs of terms:
        </p>
          <ol>
            <li><p>Stream and <em>socket</em>.</p></li> 
            <li><p>Internet and <em>internet</em>. </p></li> 
            <li><p>Domain name and <em>port</em>. </p></li> 
            <li><p>Client and <em>server</em>. </p></li> 
            <li><p>Ethernet and <em>Internet</em>. </p></li> 
            <li><p>URL and <em>domain name</em>.</p></li> 
          </ol>
      </li>
      
      <li>
        <p>
          What is a <em>protocol</em>?
          Give one or two examples of protocols that are used on the Internet.
        </p>
      </li>
      <li>
        <p>
          What service is managed by the HTTP protocol?
        </p>
      </li>
      <li>
        <p>
          Give examples of client applications that use the HTTP protocol.
        </p>
      </li>
      <li>
        <p>
          Why is it important that applets be limited in terms of their network and file system access?
          Describe the various networking restrictions that apply to Java applets.
        </p>
      </li>
      <li>
        <p>
          What does the <c>Internet Protocol</c> do?
          Describe how it would be used to join an ethernet and a token ring network.
        </p>
      </li>
      <li>
        <p>
          Describe one or two circumstances under which a <c>ConnectException</c> would be thrown.
        </p>
      </li>
      <li>
        <p>
          Modify the <c>SlideShowFrame</c> so that it plays an audio file along with each slide.
        </p>
      </li>
      <li>
        <p>
          Design and implement a Java applet that downloads a random substitution cryptogram and provides an interface that helps the user try to solve the cryptogram.
          The interface should enable the user to substitute an arbitrary letter for the letters in the cryptogram.
          The cryptogram files should be stored in the same directory as the applet itself.
        </p>
      </li>
      <li>
        <p>
          Design and implement a Java application that displays a random message
          (or a random joke)
          each time the user clicks a
<c>GetMessage</c> button.
          The messages should be stored in a set of files in the same directory as the applet itself.
          Each time the button is clicked,
          the applet should download one of the message files.
        </p>
      </li>
      <li>
        <p>
          Write a client/server application of the message or joke service described in the previous exercise.
          Your implementation should extend the <c>Server</c> and <c>Client</c> classes.
        </p>
      </li>
      <li>
        <p>
          Write an implementation of the scramble service.
          Given a word,
          the scramble service will return a string containing all possible permutations of the letter combinations in the word.
          For example, given
          <q>man,</q>
          the scramble service will return
          <q>amn, anm, man, mna, nam, nma.</q>
          Use the <c>Server</c> and <c>Client</c> classes in your design.
          (See the Self-Study Exercises for a description of the design.)
          Challenge: Modify the Nim server game in this chapter so that the client and server can negotiate the rules of the game,
          including how many sticks, how many pick ups per turn,
          and who goes first.
        </p>
      </li>
    </ol>
</section>    