<section xml:id="introduction32">
  <title>Introduction</title>
  <p>
    As we have seen, a <em>Graphical User Interface (GUI)</em>
    creates a certain way of interacting with a program.
    It is what gives a program its <em>look and feel</em>.
    In preceding chapters,
    we have already used the basic components from which GUIs are created,
    including buttons, text fields, labels, and text areas.
    Throughout this chapter,
    we will focus on designing and building GUIs that are easy for users to navigate.
    However, Java's GUI libraries are so large that we will concentrate on only a handful of additional components,
    including containers, check boxes, radio buttons, and menus.
  </p>
  <p>
    We will try to identify design principles that can be applied to the design of more advanced interfaces.
    Also, because Java's GUI classes provide an excellent example of object-oriented design,
    we will highlight some of the important design decisions and principles that have influenced the development of Java's GUI classes in both the AWT and Swing.
    Let's begin with a brief history Java's GUI libraries.
  </p>
</section>