<section xml:id="introduction34">
  <title>Introduction</title>
  <p>
    This chapter is about doing more than one thing at a time.
    Doing more than one thing at once is commonplace in our everyday lives.
    For example,
    let's say your breakfast today consists of cereal, toast,
    and a cup of java.
    You have to do three things at once to have breakfast:
    eat cereal, eat toast, and drink coffee.
  </p>
  <p>
    Actually, you do these things
    <q>at the same time</q>
    by alternating among them: You take a spoonful of cereal,
    then a bite of toast, and then sip some coffee.
    Then you have another bite of toast,
    or another spoonful of cereal,
    more coffee, and so on, until breakfast is finished.
    If the phone rings while you're having breakfast,
    you will probably answer it<mdash/>and continue to have breakfast,
    or at least to sip the coffee.
    This means you're doing even more
    <q>at the same time.</q>
    Everyday life is full of examples where we do more than one task at the same time.
  </p>
  <p>
    The computer programs we have written so far have performed one task at a time.
    But there are plenty of applications where a program needs to do several things at once,
    or <em>concurrently</em>.
        <idx><h>concurrently</h></idx>
    For example, if you wrote an Internet chat program,
    it would let several users take part in a discussion group.
    The program would have to read messages from several users at the same time and broadcast them to the other participants in the group.
    The reading and broadcasting tasks would have to take place concurrently.
    In Java, concurrent programming is handled by <em>threads</em>,
    the topic of this chapter.
  </p>
</section>