<section xml:id="ch1-sum">
  <title>Chapter Summary</title>
<subsection>
<title>Technical Terms</title>
  <tabular>
  <row>
  <cell>
    application program
  </cell>
  <cell>
    assignment statement
  </cell>
  <cell>
    comment
  </cell>
  </row>
  <row>
  <cell>
    compound statement (block)
  </cell>
  <cell>
    data type
  </cell>
  <cell>
    declaration statement
  </cell>
  </row>
  <row>
  <cell>
    default constructor
  </cell>
  <cell>
    executable statement
  </cell>
  <cell>
    expression
  </cell>
  </row>
  <row>
  <cell>
    identifier
  </cell>
  <cell>
    literal value
  </cell>
  <cell>
    object instantiation
  </cell>
  </row>
  <row>
  <cell>
    operator
  </cell>
  <cell>
    package
  </cell>
  <cell>
    parameter
  </cell>
  </row>
  <row>
  <cell>
    primitive data type
  </cell>
  <cell>
    pseudocode
  </cell>
  <cell>
    qualified name
  </cell>
  </row>
  <row>
  <cell>
    semantics
  </cell>
  <cell>
    statement
  </cell>
  <cell>
    stepwise refinement
  </cell>
  </row>
  <row>
  <cell>
    syntax
  </cell>
  </row>
  </tabular>
</subsection>
<subsection>
<title>Summary of Important Points</title>
  <p>
    <ul>
      <li>
        <p>
          Good program design requires that each object and method have a well-defined role and clear definition of what information is needed for the task and what results will be produced.
        </p>
      </li>
      <li>
        <p>
          Good program design is important;
          the sooner you start coding, the longer the program will take to finish.
          Good program design strives for readability, clarity, and flexibility.
        </p>
      </li>
      <li>
        <p>
          Testing a program is very important and must be done with care,
          but it can only reveal the presence of bugs, not their absence.
        </p>
      </li>
      <li>
        <p>
          An algorithm is a step-by-step process that solves some problem.
          Algorithms are often described in pseudocode,
          a hybrid language that combines English and programming language constructs.
        </p>
      </li>
      <li>
        <p>
          A syntax error occurs when a statement breaks a Java syntax rules.
          Syntax errors are detected by the compiler.
          A semantic error is an error in the program's design and cannot be detected by the compiler.
        </p>
      </li>
      <li>
        <p>
          Writing Java code should follow the stepwise refinement process.
        </p>
      </li>
      <li>
        <p>
          Double slashes (//) are used to make a single-line comment.
          Comments that extend over several lines must begin with /* and end with */.
        </p>
      </li>
      <li>
        <p>
          An <em>identifier</em> must begin with a letter of the alphabet and may consist of any number of letters, digits,
          and the special characters _ and $. An identifier cannot be identical to a Java keyword.
          Identifiers are case sensitive.
        </p>
      </li>
      <li>
        <p>
          A <em>keyword</em> is a term that has special meaning in the Java language (<xref ref="tab_keywords">Table</xref>).
        </p>
      </li>
      <li>
        <p>
          Examples of Java's <em>primitive data types</em>
          include the <c>int</c>, <c>boolean</c>, and <c>double</c> types.
        </p>
      </li>
      <li>
        <p>
          A variable is a named storage location.
          In Java, a variable must be declared before it can be used.
        </p>
      </li>
      <li>
        <p>
          A literal value is an actual value of some type,
          such as a <c>String</c>("Hello") or an <c>int</c>(5).
        </p>
      </li>
      <li>
        <p>
          A declaration statement has the form: 
        </p>
          <c>
           Type VariableName ;
          </c>
      </li>
      <li>
        <p>
          An assignment statement has the form:
        </p>
          <c>
             VariableName = Expression ; 
          </c>
        <p>
         When it is executed it determines the value of the <em>Expression</em>
          on the right of the assignment operator (<m>=</m>) and stores the value in the variable named on the left.
        </p>
      </li>
      <li>
        <p>
          Java's operators are type dependent,
          where the type is dependent on the data being manipulated.
          When adding two <c>int</c> values (<c>7 + 8</c>),
          the <m>+</m> operation produces an <c>int</c> result.
        </p>
      </li>
      <li>
        <p>
          A class definition has two parts:
          a class header and a class body.
          A class header takes the form of optional modifiers followed by the 
          word <c>class</c> followed by an identifier naming the class followed,
          optionally,
          by the keyword <c>extends</c> and the name of the class's superclass.
        </p>
      </li>
      <li>
        <p>
          There are generally two kinds of elements declared and defined in the class body:
          variables and methods.
        </p>
      </li>
      <li>
        <p>
          Object instantiation is the process of creating an instance of 
          a class using the <c>new</c> operator in conjunction with one of the class's constructors.
        </p>
      </li>
      <li>
        <p>
          Dot notation takes the form <em>qualifiers.elementName</em>.
          The expression <c>System.out.print("hello")</c> uses Java dot notation 
          to invoke the <c>print()</c> method of the <c>System.out</c> object.
        </p>
      </li>
      <li>
        <p>
          A Java application program runs in stand-alone mode.
        </p>
      </li>
      <li>
        <p>
          A Java source program must be stored in a file that has a <c>.java</c> extension.
          A Java bytecode file has the same name as the source file but a <c>.class</c> extension.
          It is an error in Java if the name of the source file is not identical 
          to the name of the public Java class defined within the file.
        </p>
      </li>
      <li>
        <p>
          Java programs are first compiled into bytecode and then interpreted by the Java Virtual Machine (JVM).
        </p>
      </li>
    </ul>
  </p>
</subsection>


<solutions scope="ch1-intro-java" divisional="solution" project="solution" inline="solution"> 
<title>Solutions to Self-Study Exercises</title>
 
</solutions>

</section>